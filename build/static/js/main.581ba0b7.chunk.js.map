{"version":3,"sources":["sections/poll_create.js","sections/poll_vote.js","fireworks/fireworks.js","sections/poll_results.js","theme/theme.js","App.js","reportWebVitals.js","index.js"],"names":["withStyles","Theme","createStyles","root","listOptionContainer","listOption","display","listOptionText","flexGrow","padding","spacing","borderRadius","border","header","background","minHeight","footer","button","height","removeButton","color","palette","secondary","main","withSnackbar","props","useState","newOption","setNewOption","handleAddOption","Object","keys","options","length","enqueueSnackbar","variant","hasOwnProperty","addOption","Grid","container","item","xs","className","classes","TextField","value","question","label","type","onChange","e","setQuestion","target","inputProps","maxLength","fullWidth","data-testid","map","option","index","Box","style","marginTop","size","editOption","Tooltip","title","IconButton","onClick","removeOption","width","Close","onKeyDown","key","disabled","Button","getContrastText","selectedOption","setSelectedOption","Typography","RadioGroup","FormControlLabel","control","Radio","checked","textAlign","startIcon","Done","incrementVote","FireWorks","show","text","getTotalVotes","count","forEach","getWinningOption","winningName","winningCount","data","dataObj","labels","datasets","backgroundColor","borderColor","borderWidth","push","buildData","showWinner","setShowWinner","pieOptions","elements","center","plugins","beforeDraw","chart","config","ctx","centerConfig","restore","fontSize","toFixed","font","textBaseline","textX","chartArea","left","right","textY","top","bottom","fillText","save","legend","scales","xAxes","gridLines","yAxes","ticks","beginAtZero","ClickAwayListener","onClickAway","theme","createMuiTheme","primary","overrides","MuiPaper","MuiTypography","overflow","textOverflow","MuiFormControlLabel","successSnackbar","errorSnackbar","defaultOptions","Option1","Option2","setOptions","ThemeProvider","maxSnack","variantSuccess","variantError","anchorOrigin","vertical","horizontal","sm","Paper","Replay","BarChart","Yoda","md","newOptions","prevOption","o","vote","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.581ba0b7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  IconButton,\r\n  Button,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { Close } from \"@material-ui/icons\";\r\nimport { withSnackbar } from \"notistack\";\r\n\r\nconst styles = (Theme) =>\r\n  createStyles({\r\n    root: {},\r\n    listOptionContainer: {},\r\n    listOption: {\r\n      display: \"flex\",\r\n    },\r\n    listOptionText: {\r\n      flexGrow: 1,\r\n      padding: Theme.spacing(1),\r\n      borderRadius: \"5px\",\r\n      border: \"1px solid #d3d5dd\",\r\n    },\r\n    header: {\r\n      borderRadius: \"5px\",\r\n      border: \"1px solid rgba(54, 162, 235, 1)\",\r\n      background: \"rgba(54, 162, 235, 0.2)\",\r\n      minHeight: \"56px\",\r\n    },\r\n    footer: {\r\n      borderRadius: \"5px\",\r\n      border: \"1px solid rgba(75, 192, 192, 1)\",\r\n      background: \"rgba(75, 192, 192, 0.2)\",\r\n      minHeight: \"56px\",\r\n    },\r\n    button: {\r\n      padding: \"6px 16px\",\r\n      height: \"48px\",\r\n    },\r\n    removeButton: {\r\n      color: Theme.palette.secondary.main,\r\n    },\r\n  });\r\n\r\nfunction PollCreate(props) {\r\n  const maxOptionsCount = 10;\r\n  const [newOption, setNewOption] = useState(\"\");\r\n\r\n  const handleAddOption = () => {\r\n    if (Object.keys(props.options).length >= maxOptionsCount) {\r\n      props.enqueueSnackbar(\"Options reached the limit of 10.\", {\r\n        variant: \"error\",\r\n      });\r\n    } else if (!newOption || newOption === \"\") {\r\n      props.enqueueSnackbar(\"Please type an answer first.\", {\r\n        variant: \"error\",\r\n      });\r\n    } else if (props.options.hasOwnProperty(newOption)) {\r\n      props.enqueueSnackbar(`'${newOption}' is already an option.`, {\r\n        variant: \"error\",\r\n      });\r\n    } else {\r\n      props.addOption(newOption);\r\n      setNewOption(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} className={props.classes?.header}>\r\n        <TextField\r\n          value={props.question || \"\"}\r\n          label={\"What is the question?\"}\r\n          type={\"text\"}\r\n          onChange={(e) => props.setQuestion(e.target.value)}\r\n          inputProps={{ maxLength: 80 }}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} data-testid={\"edit-option-list\"}>\r\n        {Object.keys(props.options).map((option, index) => (\r\n          <Box\r\n            className={props.classes?.listOption}\r\n            key={index}\r\n            style={index > 0 ? { marginTop: \"5px\" } : {}}\r\n          >\r\n            <TextField\r\n              label={\"\"}\r\n              value={option}\r\n              variant={\"outlined\"}\r\n              size={\"small\"}\r\n              onChange={(e) => props.editOption(option, e.target.value)}\r\n              inputProps={{\r\n                maxLength: 80,\r\n                \"data-testid\": \"edit-option-list-item\",\r\n              }}\r\n              fullWidth\r\n            />\r\n            <Tooltip title={\"Remove\"}>\r\n              <IconButton\r\n                onClick={() => {\r\n                  if (Object.keys(props.options).length <= 2) {\r\n                    props.enqueueSnackbar(\r\n                      \"At least two options are required.\",\r\n                      { variant: \"error\" }\r\n                    );\r\n                  } else {\r\n                    props.removeOption(option);\r\n                  }\r\n                }}\r\n                size={\"small\"}\r\n                style={{ width: \"40px\" }}\r\n              >\r\n                <Close className={props.classes?.removeButton} />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n        ))}\r\n      </Grid>\r\n      <Grid item xs={12} className={props.classes?.footer}>\r\n        <Box className={props.classes?.listOption}>\r\n          <TextField\r\n            value={newOption || \"\"}\r\n            label={`Type an answer (${\r\n              maxOptionsCount - Object.keys(props.options).length\r\n            } ${\r\n              maxOptionsCount - Object.keys(props.options).length === 1\r\n                ? \"slot\"\r\n                : \"slots\"\r\n            } remaining)`}\r\n            onChange={(e) => setNewOption(e.target.value)}\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                handleAddOption();\r\n              }\r\n            }}\r\n            disabled={Object.keys(props.options).length >= maxOptionsCount}\r\n            inputProps={{\r\n              maxLength: 80,\r\n              \"data-testid\": \"add-option-field\",\r\n            }}\r\n            fullWidth\r\n          />\r\n          <Tooltip title={\"Add\"}>\r\n            <Button\r\n              data-testid={\"add-option-button\"}\r\n              className={props.classes?.button}\r\n              //startIcon={<Add />}\r\n              onClick={handleAddOption}\r\n            >\r\n              {\"Add\"}\r\n            </Button>\r\n          </Tooltip>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(withSnackbar(PollCreate));\r\n","import React, { useState } from \"react\";\r\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  Tooltip,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { Done } from \"@material-ui/icons\";\r\nimport { withSnackbar } from \"notistack\";\r\n\r\nconst styles = (Theme) =>\r\n  createStyles({\r\n    root: {},\r\n    header: {\r\n      borderRadius: \"5px\",\r\n      border: \"1px solid rgba(54, 162, 235, 1)\",\r\n      background: \"rgba(54, 162, 235, 0.2)\",\r\n      minHeight: \"56px\",\r\n    },\r\n    footer: {\r\n      borderRadius: \"5px\",\r\n      border: \"1px solid rgba(75, 192, 192, 1)\",\r\n      background: \"rgba(75, 192, 192, 0.2)\",\r\n      color: Theme.palette.getContrastText(\"rgba(75, 192, 192, 0.4)\"),\r\n      minHeight: \"56px\",\r\n    },\r\n    button: {\r\n      width: \"100%\",\r\n      padding: \"6px 16px\",\r\n      height: \"48px\",\r\n    },\r\n  });\r\n\r\nfunction PollVote(props) {\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} className={props.classes?.header}>\r\n        <Typography variant={\"h5\"}>{props.question}</Typography>\r\n      </Grid>\r\n      <Grid item xs={12} style={{ marginTop: \"15px\" }}>\r\n        <RadioGroup onChange={(e) => setSelectedOption(e.target.value)}>\r\n          {Object.keys(props.options).map((option, index) => (\r\n            <FormControlLabel\r\n              key={index}\r\n              value={option}\r\n              control={<Radio checked={selectedOption === option} />}\r\n              label={option}\r\n              style={index > 0 ? { marginTop: \"3px\" } : {}}\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n      </Grid>\r\n      <Grid item xs={12} className={props.classes?.footer}>\r\n        <Box\r\n          className={props.classes?.listOption}\r\n          style={{ textAlign: \"center\" }}\r\n        >\r\n          <Tooltip title={\"Vote\"}>\r\n            <Button\r\n              className={props.classes?.button}\r\n              startIcon={<Done />}\r\n              onClick={() => {\r\n                if (!selectedOption || selectedOption === \"\") {\r\n                  props.enqueueSnackbar(\"Please specify an option.\", {\r\n                    variant: \"error\",\r\n                  });\r\n                } else {\r\n                  props.incrementVote(selectedOption);\r\n                  props.enqueueSnackbar(`You voted for '${selectedOption}'!`, {\r\n                    variant: \"success\",\r\n                  });\r\n                  setSelectedOption(\"\");\r\n                }\r\n              }}\r\n            >\r\n              {\"Vote\"}\r\n            </Button>\r\n          </Tooltip>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(withSnackbar(PollVote));\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport './fireworks.css';\r\n\r\nexport default function FireWorks(props) {\r\n\r\n    if(props.show){\r\n        return (\r\n            <>\r\n            <div className=\"pyro\">\r\n                <div className=\"before\"></div>\r\n                <div className=\"after\"></div>\r\n            </div>\r\n            <Typography className=\"pyrotext\" variant={'h2'}>{props.text}</Typography>\r\n            </>\r\n        )\r\n    } else return null;\r\n    \r\n}","import React, { useState } from \"react\";\r\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Grid, Button, ClickAwayListener } from \"@material-ui/core\";\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport FireWorks from \"../fireworks/fireworks\";\r\n\r\nconst styles = (Theme) =>\r\n  createStyles({\r\n    root: {},\r\n    header: {\r\n      borderRadius: \"5px\",\r\n      border: \"1px solid rgba(54, 162, 235, 1)\",\r\n      background: \"rgba(54, 162, 235, 0.2)\",\r\n      minHeight: \"56px\",\r\n    },\r\n    footer: {\r\n      borderRadius: \"5px\",\r\n      border: \"1px solid rgba(75, 192, 192, 1)\",\r\n      background: \"rgba(75, 192, 192, 0.2)\",\r\n      color: Theme.palette.getContrastText(\"rgba(75, 192, 192, 0.4)\"),\r\n      padding: '0 !important',\r\n    },\r\n    button: {\r\n      width: \"100%\",\r\n    },\r\n  });\r\n\r\nfunction buildData(props) {\r\n  let dataObj = {\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: \"Votes\",\r\n        data: [],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.4)\",\r\n          \"rgba(54, 162, 235, 0.4)\",\r\n          \"rgba(255, 206, 86, 0.4)\",\r\n          \"rgba(75, 192, 192, 0.4)\",\r\n          \"rgba(153, 102, 255, 0.4)\",\r\n          \"rgba(205, 55, 109, 0.4)\",\r\n          \"rgba(255, 159, 64, 0.4)\",\r\n          \"rgba(208, 217, 68, 0.4)\",\r\n          \"rgba(32, 67, 195, 0.4)\",\r\n          \"rgba(97, 201, 85, 0.4)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(205, 55, 109, 1)\",\r\n          \"rgba(255, 159, 64, 1)\",\r\n          \"rgba(208, 217, 68, 1)\",\r\n          \"rgba(32, 67, 195, 1)\",\r\n          \"rgba(97, 201, 85, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  Object.keys(props.options).forEach((option) => {\r\n    dataObj.labels.push(option);\r\n    dataObj.datasets[0].data.push(props.options[option]);\r\n  });\r\n\r\n  return dataObj;\r\n}\r\n\r\nfunction getTotalVotes(options) {\r\n  let count = 0;\r\n  Object.keys(options).forEach((option) => {\r\n    count += options[option];\r\n  });\r\n  return count;\r\n}\r\n\r\nfunction getWinningOption(options) {\r\n  let winningName = \"\";\r\n  let winningCount = -1;\r\n  Object.keys(options).forEach((option) => {\r\n    if(options[option] > winningCount){\r\n      winningName = option;\r\n      winningCount = options[option];\r\n    }\r\n  });\r\n  return winningName;\r\n}\r\n\r\nfunction PollResult(props) {\r\n  const data = buildData(props);\r\n  const [showWinner, setShowWinner] = useState(false);\r\n  const barOptions = {\r\n    legend: { display: false },\r\n    scales: {\r\n      xAxes: [{ gridLines: { display: false } }],\r\n      yAxes: [{ ticks: { beginAtZero: true }, gridLines: { display: true } }],\r\n    },\r\n  };\r\n\r\n  const pieOptions = {\r\n    elements: {\r\n      center: {\r\n        text: `Total: ${getTotalVotes(props.options)}`,\r\n      },\r\n    },\r\n  };\r\n\r\n  const piePlugins = [\r\n    {\r\n      beforeDraw: function (chart) {\r\n        if (chart.config.options.elements.center) {\r\n          var height = chart.chart.height,\r\n            ctx = chart.chart.ctx;\r\n\r\n          var centerConfig = chart.config.options.elements.center;\r\n          ctx.restore();\r\n          var fontSize = (height / 240).toFixed(2);\r\n          ctx.font = fontSize + \"em sans-serif\";\r\n          ctx.textBaseline = \"middle\";\r\n          ctx.textAlign = \"center\";\r\n\r\n          var text = centerConfig.text,\r\n            textX = (chart.chartArea.left + chart.chartArea.right) / 2,\r\n            textY = (chart.chartArea.top + chart.chartArea.bottom) / 2;\r\n\r\n          ctx.fillText(text, textX, textY);\r\n          ctx.save();\r\n        }\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} className={props.classes?.header}>\r\n        <Typography variant={\"h5\"}>{props.question}</Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Doughnut data={data} options={pieOptions} plugins={piePlugins} />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Bar data={data} options={barOptions} />\r\n      </Grid>\r\n      <Grid item xs={12} className={props.classes?.footer}>\r\n      <ClickAwayListener onClickAway={() => setShowWinner(false)}>\r\n          <Button className={props.classes?.button} onClick={() => setShowWinner(!showWinner)}>\r\n            Celebrate Winner!\r\n          </Button>\r\n        </ClickAwayListener>\r\n      </Grid>\r\n      <FireWorks show={showWinner} text={`${getWinningOption(props.options)} won!`} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(PollResult);\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n      primary: {\r\n          main: '#222222'\r\n      },\r\n      secondary: {\r\n          main: 'rgba(255, 99, 132, 1)'\r\n      },\r\n  },\r\n  overrides: {\r\n    MuiPaper: {\r\n      root: {\r\n        padding: '20px',\r\n        backgroundColor: '#FEF6FF'\r\n      },\r\n    },\r\n    MuiTypography: {\r\n        root: {\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n        }\r\n    },\r\n    MuiFormControlLabel: {\r\n      root: {\r\n        width: '100%',\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React, { useState } from \"react\";\r\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  ThemeProvider,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { Replay, BarChart } from \"@material-ui/icons\";\r\nimport PollCreate from \"./sections/poll_create\";\r\nimport PollVote from \"./sections/poll_vote\";\r\nimport PollResults from \"./sections/poll_results\";\r\nimport Theme from \"./theme/theme\";\r\nimport { SnackbarProvider } from \"notistack\";\r\n\r\nconst styles = (Theme) =>\r\n  createStyles({\r\n    successSnackbar: {\r\n      border: \"1px solid rgba(75, 192, 192, 1)\",\r\n      backgroundColor: \"rgba(75, 192, 192, 0.8) !important\",\r\n    },\r\n    errorSnackbar: {\r\n      border: \"1px solid rgba(255, 99, 132, 1)\",\r\n      backgroundColor: \"rgba(255, 99, 132, 0.8) !important\",\r\n    },\r\n  });\r\n\r\nfunction App(props) {\r\n  const defaultQuestion = \"\";\r\n  const defaultOptions = {\r\n    Option1: 0,\r\n    Option2: 0,\r\n  };\r\n  const [question, setQuestion] = useState(defaultQuestion);\r\n  const [options, setOptions] = useState(defaultOptions);\r\n\r\n  /**Add a new option */\r\n  const addOption = (option) => {\r\n    if (option && option !== \"\") {\r\n      //if the option already exists, ignore\r\n      if (options.hasOwnProperty(option)) {\r\n        return;\r\n      } else {\r\n        let newOptions = { ...options };\r\n        newOptions[option] = 0;\r\n        setOptions(newOptions);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**Remove an existing option */\r\n  const removeOption = (option) => {\r\n    //if the option does not exists, ignore\r\n    if (options.hasOwnProperty(option)) {\r\n      let newOptions = { ...options };\r\n      delete newOptions[option];\r\n      setOptions(newOptions);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  /**Edit an existing option */\r\n  const editOption = (prevOption, newOption) => {\r\n    //if the option does not exist or change, ignore\r\n    if (options.hasOwnProperty(prevOption) && prevOption !== newOption) {\r\n      let newOptions = {};\r\n      Object.keys(options).forEach((o) => {\r\n        if (o === prevOption) {\r\n          //check for duplicates\r\n          if(newOptions.hasOwnProperty(newOption)){\r\n            newOptions[newOption + '2'] = options[o];\r\n          } else {\r\n            newOptions[newOption] = options[o];\r\n          }\r\n        } else {\r\n          newOptions[o] = options[o];\r\n        }\r\n      });\r\n      setOptions(newOptions);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  /**Resets all options */\r\n  const resetAll = () => {\r\n    setQuestion(defaultQuestion);\r\n    setOptions(defaultOptions);\r\n  };\r\n\r\n  /**Inserts some sample data */\r\n  const insertSample = () => {\r\n    setQuestion(\"Who is the best Jedi?\");\r\n    setOptions({\r\n      \"Anakin Skywalker\": 2,\r\n      \"Han Solo\": 1,\r\n      \"Obi-Wan Kenobi\": 3,\r\n      Yoda: 5,\r\n      \"Mace Windu\": 2,\r\n    });\r\n  };\r\n\r\n  /**Increment the count of the vote */\r\n  const incrementVote = (vote) => {\r\n    if (vote) {\r\n      let newOptions = { ...options };\r\n      newOptions[vote] = newOptions[vote] + 1;\r\n      setOptions(newOptions);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"App\"\r\n      style={{\r\n        padding: \"20px\",\r\n        height: \"calc(100vh - 40px)\",\r\n        backgroundColor: \"#e0e0e7\",\r\n        overflow: \"auto\",\r\n      }}\r\n    >\r\n      <ThemeProvider theme={Theme}>\r\n        <SnackbarProvider\r\n          maxSnack={3}\r\n          classes={{\r\n            variantSuccess: props.classes?.successSnackbar,\r\n            variantError: props.classes?.errorSnackbar,\r\n          }}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={12}>\r\n              <Paper>\r\n                <Typography variant={\"h3\"}>{\"Poll Creator 2000\"}</Typography>\r\n                <Tooltip title={\"Reset data to initial state\"}>\r\n                  <Button startIcon={<Replay />} onClick={resetAll}>\r\n                    Reset\r\n                  </Button>\r\n                </Tooltip>\r\n                <Tooltip title={\"Load sample data\"}>\r\n                  <Button startIcon={<BarChart />} onClick={insertSample}>\r\n                    Sample\r\n                  </Button>\r\n                </Tooltip>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                  <Paper style={{ minHeight: \"calc(100vh - 240px)\" }}>\r\n                    <PollCreate\r\n                      question={question}\r\n                      setQuestion={setQuestion}\r\n                      options={options}\r\n                      addOption={addOption}\r\n                      removeOption={removeOption}\r\n                      editOption={editOption}\r\n                    />\r\n                  </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                  <Paper style={{ minHeight: \"calc(100vh - 240px)\" }}>\r\n                    <PollVote\r\n                      question={question}\r\n                      options={options}\r\n                      incrementVote={incrementVote}\r\n                    />\r\n                  </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={4}>\r\n                  <Paper style={{ minHeight: \"calc(100vh - 240px)\" }}>\r\n                    <PollResults question={question} options={options} />\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SnackbarProvider>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}